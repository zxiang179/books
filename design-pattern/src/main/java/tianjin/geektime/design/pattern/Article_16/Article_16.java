package tianjin.geektime.design.pattern.Article_16;

/**
 * Created by tianjin on 2021/1/16.
 * 如何理解"对扩展开放、修改关闭"？
 * 添加一个新的功能应该是，在已有代码基础上扩展代码(新增模块、类、方法等)，而非修改已有代码(修改模块、类、方法等)
 * 开闭原则不是完全杜绝修改，而是以最小的修改代码的代价来完成新功能的开发；
 * 同样的代码改动，在粗代码粒度下，可能被认定为修改，细代码粒度下，可能有被认定为扩展；
 * 修改代码就意味着违背开闭原则吗？
 * 1. 往类中添加新的属性：这个代码改动没有修改已有的属性和方法；只要没有破坏原有代码的正常运行，没有破坏原有的单元测试，就是一个合格的代码改动
 * 如何做到对扩展开放，修改关闭？
 * 1. 随时具备扩展意识、抽象意识、封装意识
 * 2. 识别出代码的可变不封和不可变部分
 *
 */
public class Article_16 {
}
